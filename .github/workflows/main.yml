name: Docker CI/CD Pipeline

on:
  push:
    tags:
      - 'qa/be/*'
      - 'qa/ai/*'
      - 'qa/fe/*'

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/qa/be/') || startsWith(github.ref, 'refs/tags/qa/fe/') || startsWith(github.ref, 'refs/tags/qa/ai/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and Push BE
      - name: Build and test BE
        if: startsWith(github.ref, 'refs/tags/qa/be/')
        run: |
          cd Backend
          docker build -t my-node-app:latest .
          docker run -d my-node-app:latest 

      - name: Push image BE to Docker Hub
        if: startsWith(github.ref, 'refs/tags/qa/be/')
        uses: docker/build-push-action@v2
        with:
          context: ./Backend 
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app:${{ github.sha }}

      # Build and Push FE
      - name: Build and test FE
        if: startsWith(github.ref, 'refs/tags/qa/fe/')
        run: |
          cd Website
          docker build -t my-web-app:latest .
          docker run -d my-web-app:latest 

      - name: Push image FE to Docker Hub
        if: startsWith(github.ref, 'refs/tags/qa/fe/')
        uses: docker/build-push-action@v2
        with:
          context: ./Website 
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-web-app:${{ github.sha }}

      # Build and Push AI
      - name: Build and test AI
        if: startsWith(github.ref, 'refs/tags/qa/ai/')
        run: |
          cd AI
          docker build -t my-fast-app:latest .
          docker run -d my-fast-app:latest  

      - name: Push image AI to Docker Hub
        if: startsWith(github.ref, 'refs/tags/qa/ai/')
        uses: docker/build-push-action@v2
        with:
          context: ./AI 
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-fast-app:${{ github.sha }}

  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Deploy FE to server
        if: startsWith(github.ref, 'refs/tags/qa/fe/')
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST_FE }}
          username: ${{ secrets.SERVER_USER_FE }}
          key: ${{ secrets.SSH_PRIVATE_KEY_FE }}
          script: |
            # Deploy FE if the tag starts with qa/fe/
            if [[ "${{ github.ref }}" == refs/tags/qa/fe/* ]]; then
              docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app:${{ github.sha }}
              docker stop my-node-app || true
              docker rm my-node-app || true
              sudo docker run -d --network my-network -p 6996:6996 --name my-node-app ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app:${{ github.sha }}
            fi

      - name: Deploy BE to server
        if: startsWith(github.ref, 'refs/tags/qa/be/')
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Deploy BE if the tag starts with qa/be/
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app:${{ github.sha }}
            docker stop my-node-app || true
            docker rm my-node-app || true
            sudo docker run -d --network my-network -p 6996:6996 --name my-node-app ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app:${{ github.sha }}

      - name: Deploy AI to server
        if: startsWith(github.ref, 'refs/tags/qa/ai/')
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Deploy AI if the tag starts with qa/ai/
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-fast-app:${{ github.sha }}
            docker stop my-fast-app || true
            docker rm my-fast-app || true
            sudo docker run -d --network my-network -p 8000:8000 --name my-fast-app ${{ secrets.DOCKERHUB_USERNAME }}/my-fast-app:${{ github.sha }}
